"use strict";const e=require("cheerio"),t=require("node:fs"),r=require("node:crypto"),s=require("node:path");module.exports=()=>{let i;const n={};return{name:"vite-plugin-sri",configResolved(e){i=e},enforce:"post",apply:"build",async writeBundle(o,a){Object.entries(a).forEach((([e,t])=>{n[e]=t}));const c=Object.keys(n).filter((e=>e.endsWith(".html"))).map((e=>{const t=n[e];if("asset"===t.type)return{name:t.fileName,source:t.source}})).filter((e=>!!e));for(const{name:a,source:l}of c){const c=e.load(l),u=c("script").filter('[src]:not([src^="http"]):not([src^="//"])'),f=c("link[rel=stylesheet]").filter('[href]:not([href^="http"]):not([href^="//"])'),d=async e=>{let a;const c=e.attribs.src?"src":"href",l=e.attribs[c],u=0===l.indexOf(i.base)?l.substring(i.base.length):l,f=Object.entries(n).find((([,e])=>e.fileName===u))?.[1];if(f)a="asset"===f.type?f.source:f.code;else{i.logger.warn(`cannot find ${u} in output bundle.`);try{a=t.readFileSync(s.resolve(o.dir,u))}catch(e){a=void 0}}a&&(e.attribs.integrity=`sha512-${r.createHash("sha512").update(a).digest().toString("base64")}`),e.attribs.crossorigin||(e.attribs.crossorigin="anonymous")};await Promise.all([...u.map((async(e,t)=>await d(t))),...f.map((async(e,t)=>await d(t)))]),t.writeFileSync(s.resolve(i?.root,i?.build.outDir,a),c.html())}}}};
