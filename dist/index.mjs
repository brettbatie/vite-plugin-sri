import{load as t}from"cheerio";import{writeFileSync as e,readFileSync as r}from"node:fs";import{createHash as s}from"node:crypto";import{resolve as o}from"node:path";const i=()=>{let i;const n={};return{name:"vite-plugin-sri",configResolved(t){i=t},enforce:"post",apply:"build",async writeBundle(a,c){Object.entries(c).forEach((([t,e])=>{n[t]=e}));const f=Object.keys(n).filter((t=>t.endsWith(".html"))).map((t=>{const e=n[t];if("asset"===e.type)return{name:e.fileName,source:e.source}})).filter((t=>!!t));for(const{name:c,source:l}of f){const f=t(l),p=f("script").filter('[src]:not([src^="http"]):not([src^="//"])'),m=f("link[rel=stylesheet]").filter('[href]:not([href^="http"]):not([href^="//"])'),d=async t=>{let e;const c=t.attribs.src?"src":"href",f=t.attribs[c],l=0===f.indexOf(i.base)?f.substring(i.base.length):f,p=Object.entries(n).find((([,t])=>t.fileName===l))?.[1];if(p)e="asset"===p.type?p.source:p.code;else{i.logger.warn(`cannot find ${l} in output bundle.`);try{e=r(o(a.dir,l))}catch(t){e=void 0}}e&&(t.attribs.integrity=`sha512-${s("sha512").update(e).digest().toString("base64")}`),t.attribs.crossorigin||(t.attribs.crossorigin="anonymous")};await Promise.all([...p.map((async(t,e)=>await d(e))),...m.map((async(t,e)=>await d(e)))]),e(o(i?.root,i?.build.outDir,c),f.html())}}}};export{i as default};
